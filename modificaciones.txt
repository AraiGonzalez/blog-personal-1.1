modificaciones:
env
modelo:
User

auth. controller:
registerUser
login
createAdminUser

middware:
auth

bibliotecas:
jsonwebtoken

21/11
no encontraba la modificacion como antes usaba session por id ahora solo debuelve el token y abria que extraer
el id de este...

modificaciones:
app
auth.controller  -> logout (para garantiar cierre)

22/11

user.controller.js -> user list, deleteUser, changeRole
synclocals.js
all-post.pug
users/all-users.pug
deletePost

DB_PASSWORD = "Ru7KO4iCuUJl3n8c"
DB_USER= "caparraayelen"
DB_CONNECTION= "mongodb+srv://caparraayelen:Ru7KO4iCuUJl3n8c@blog-personal.w0uhg.mongodb.net/?retryWrites=true&w=majority&appName=blog-personal"

mongoose.connect(`${process.env.DB_CONNECTION}/myapp`)
  .then(() => console.log('Conectado a MongoDB'))
  .catch(err => console.error('Error al conectar a MongoDB', err));

const mongoose = require('mongoose');
const dotenv =require('dotenv');

dotenv.config({path:'./config.env'});

const connectDB = async () => {
    try {
        await mongoose.connect(`${process.env.DB_CONNECTION}/blog-personal`, {
            useNewUrlParser: true,
            useUnifiedTopology: true,
        });
        console.log('Base de datos conectada');
    } catch (error) {
        console.error('Error al conectar a la base de datos:', error);
        process.exit(1);
    }
};

module.exports = connectDB;

MODIFICACIONES (ARA) 
agregue los estilos,cambios en main.pug, all-users.pug
TESTEO:
agregue user.test.js
jest.setup.js 
cambie de nombre app.js por index.js para deployar 
en index.js modifique esto
let server;
if (process.env.NODE_ENV !== 'test') {
  const PORT = process.env.PORT || 3000;
  server = app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
  });
}

module.exports = { app, server }; // Exporta la aplicaci√≥n y el servidor
exporta app y server para pruebas 
para ejecutar los test poner por consola los siguientes comandos: 
npm install  (solo por unica vez) 
npm run test -- user.test.js  
